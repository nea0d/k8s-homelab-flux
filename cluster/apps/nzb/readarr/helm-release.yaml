---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: readarr
  namespace: nzb
spec:
  interval: 5m
  chart:
    spec:
      # renovate: registryUrl=https://k8s-at-home.com/charts/
      chart: readarr
      version: 6.3.2
      sourceRef:
        kind: HelmRepository
        name: k8s-at-home-charts
        namespace: flux-system
      interval: 5m
  values:
    image:
      repository: ghcr.io/k8s-at-home/readarr
      tag: v0.1.1.1352
    env:
      TZ: "${TIMEZONE}"
    ingress:
      main:
        enabled: true
        ingressClassName: "traefik"
        annotations:
          cert-manager.io/cluster-issuer: "letsencrypt-production"
          traefik.ingress.kubernetes.io/router.entrypoints: "websecure"
          traefik.ingress.kubernetes.io/router.middlewares: "networking-internal-only@kubernetescrd"
          hajimari.io/enable: "true"
          hajimari.io/icon: "book-open-variant"
          hajimari.io/group: "nzb"
        hosts:
          - host: &host "readarr.${SECRET_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
        tls:
          - hosts:
              - *host
            secretName: readarr-tls
      api:
        enabled: true
        ingressClassName: "traefik"
        annotations:
          cert-manager.io/cluster-issuer: "letsencrypt-production"
          traefik.ingress.kubernetes.io/router.entrypoints: "websecure"
          traefik.ingress.kubernetes.io/router.middlewares: "networking-internal-only@kubernetescrd"
        hosts:
          - host: *host
            paths:
              - path: /api
                pathType: Prefix
        tls:
          - hosts:
              - *host
            secretName: readarr-api-tls
    persistence:
      config:
        enabled: true
        existingClaim: readarr-config
      media:
        enabled: true
        existingClaim: nfs-nas-media-pvc
    podSecurityContext:
      runAsUser: 568
      runAsGroup: 568
      fsGroup: 568
      fsGroupChangePolicy: "OnRootMismatch"
    resources:
      requests:
        cpu: 500m
        memory: 250M
      limits:
        memory: 1000M
    prometheus:
      podMonitor:
        enabled: true
        interval: 3m
        scrapeTimeout: 1m30s
    # TODO : check exportarr
    # additionalContainers:
    #   exportarr:
    #     name: exportarr
    #     image: ghcr.io/onedr0p/exportarr:v0.6.1
    #     imagePullPolicy: IfNotPresent
    #     args: ["exportarr", "radarr"]
    #     env:
    #     - name: PORT
    #       value: "32123"
    #     - name: URL
    #       value: "http://localhost"
    #     - name: CONFIG
    #       value: "/config/config.xml"
    #     - name: ENABLE_UNKNOWN_QUEUE_ITEMS
    #       value: "true"
    #     - name: ENABLE_ADDITIONAL_METRICS
    #       value: "true"
    #     ports:
    #     - name: exportarr
    #       containerPort: 32123
    #     volumeMounts:
    #     - name: config
    #       mountPath: /config
    #       readOnly: true
    #     resources:
    #       requests:
    #         cpu: 100m
    #         memory: 60M
    #       limits:
    #         memory: 100M
