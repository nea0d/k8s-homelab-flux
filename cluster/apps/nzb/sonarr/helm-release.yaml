---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: &app sonarr
  namespace: nzb
spec:
  interval: 15m
  chart:
    spec:
      # renovate: registryUrl=https://k8s-at-home.com/charts/
      chart: sonarr
      version: 16.3.2
      sourceRef:
        kind: HelmRepository
        name: k8s-at-home-charts
        namespace: flux-system
      interval: 15m
  install:
    createNamespace: true
    remediation:
      retries: 5
  upgrade:
    remediation:
      retries: 5
  maxHistory: 3
  values:
    global:
      nameOverride: *app
    image:
      repository: ghcr.io/k8s-at-home/sonarr
      tag: v3.0.9.1549
    env:
      TZ: "${TIMEZONE}"
    #   SONARR__INSTANCE_NAME: Sonarr
    #   SONARR__APPLICATION_URL: "https://{{ .Release.Name }}.${SECRET_DOMAIN}"
    #   SONARR__LOG_LEVEL: info
    service:
      main:
        ports:
          http:
            port: 8989
    ingress:
      main:
        enabled: true
        ingressClassName: "traefik"
        annotations:
          cert-manager.io/cluster-issuer: "letsencrypt-production"
          traefik.ingress.kubernetes.io/router.entrypoints: "websecure"
          traefik.ingress.kubernetes.io/router.middlewares: "networking-internal-only@kubernetescrd"
          hajimari.io/enable: "true"
          hajimari.io/icon: "television-box"
          hajimari.io/group: "nzb"
        hosts:
          - host: &host "sonarr.${SECRET_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
        tls:
          - hosts:
              - *host
            secretName: sonarr-tls
      api:
        enabled: true
        ingressClassName: "traefik"
        annotations:
          cert-manager.io/cluster-issuer: "letsencrypt-production"
          traefik.ingress.kubernetes.io/router.entrypoints: "websecure"
          traefik.ingress.kubernetes.io/router.middlewares: "networking-internal-only@kubernetescrd"
        hosts:
          - host: *host
            paths:
              - path: /api
                pathType: Prefix
        tls:
          - hosts:
              - *host
            secretName: sonarr-api-tls
    podSecurityContext:
      runAsUser: 568
      runAsGroup: 568
      fsGroup: 568
      fsGroupChangePolicy: "OnRootMismatch"
    persistence:
      config:
        enabled: true
        existingClaim: sonarr-config-v1
      media:
        enabled: true
        existingClaim: nfs-nas-media-pvc
      # TODO : look at backup management
      # backup:
      #   enabled: true
      #   type: nfs
      #   server: "nas01.${SECRET_PRIVATE_DOMAIN}"
      #   path: /tank/data/backups/sonarr
      #   mountPath: /config/Backups
      #   readOnly: false
    podAnnotations:
      secret.reloader.stakater.com/reload: *app
    # TODO : add ressources limits
    # resources:
    #   requests:
    #     cpu: 10m
    #     memory: 250Mi
    #   limits:
    #     memory: 2000Mi
