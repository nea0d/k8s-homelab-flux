---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: &app lidarr
  namespace: nzb
spec:
  interval: 15m
  chart:
    spec:
      chart: app-template
      version: 0.2.2
      sourceRef:
        kind: HelmRepository
        name: bjw-s-charts
        namespace: flux-system
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    remediation:
      retries: 3
  values:
    image:
      repository: ghcr.io/onedr0p/lidarr-develop
      tag: 1.1.0.2649@sha256:76d9ab6175e98edfb6429984be48c307914a69b235445ba9f93298fd6ec3c75e
    env:
      TZ: "${TIMEZONE}"
      LIDARR__INSTANCE_NAME: Lidarr
      LIDARR__PORT: &port 80
      LIDARR__LOG_LEVEL: info
    service:
      main:
        ports:
          http:
            port: *port
    ingress:
      main:
        enabled: true
        ingressClassName: "traefik"
        annotations:
          cert-manager.io/cluster-issuer: "letsencrypt-production"
          traefik.ingress.kubernetes.io/router.entrypoints: "websecure"
          traefik.ingress.kubernetes.io/router.middlewares: "networking-internal-only@kubernetescrd"
          hajimari.io/enable: "true"
          hajimari.io/icon: "music-box"
          hajimari.io/group: "nzb"
        hosts:
          - host: &host "{{ .Release.Name }}.${SECRET_PUBLIC_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
        tls:
          - hosts:
              - *host
            secretName: lidarr-tls
      api:
        enabled: true
        ingressClassName: "traefik"
        annotations:
          cert-manager.io/cluster-issuer: "letsencrypt-production"
          traefik.ingress.kubernetes.io/router.entrypoints: "websecure"
          traefik.ingress.kubernetes.io/router.middlewares: "networking-internal-only@kubernetescrd"
        hosts:
          - host: *host
            paths:
              - path: /api
                pathType: Prefix
        tls:
          - hosts:
              - *host
            secretName: lidarr-api-tls
    persistence:
      config:
        enabled: true
        existingClaim: lidarr-config-v1
      media:
        enabled: true
        type: nfs
        server: "nas01.${SECRET_PRIVATE_DOMAIN}"
        path: /volume2/Media
        mountPath: /media
    podAnnotations:
      secret.reloader.stakater.com/reload: *app
    resources:
      requests:
        cpu: 10m
        memory: 250Mi
      limits:
        memory: 1000Mi
    prometheus:
      podMonitor:
        enabled: true
        interval: 3m
        scrapeTimeout: 1m30s
    podSecurityContext:
      runAsUser: 568
      runAsGroup: 568
      fsGroup: 568
      fsGroupChangePolicy: "OnRootMismatch"
      supplementalGroups:
        - 100
