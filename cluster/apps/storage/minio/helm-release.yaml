---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: &app minio
  namespace: storage
spec:
  interval: 15m
  chart:
    spec:
      chart: minio
      version: 4.0.14
      sourceRef:
        kind: HelmRepository
        name: minio-charts
        namespace: flux-system
  install:
    createNamespace: true
    remediation:
      retries: 5
  upgrade:
    remediation:
      retries: 5
  maxHistory: 3
  values:
    image:
      repository: quay.io/minio/minio
      tag: RELEASE.2022-09-01T23-53-36Z
    mcImage:
      repository: quay.io/minio/mc
      tag: RELEASE.2022-08-28T20-08-11Z
    minioAPIPort: &port-api 9000
    minioConsolePort: &port-console 9001
    rootUser: "${SECRET_MINIO_ROOT_USERNAME}"
    rootPassword: "${SECRET_MINIO_ROOT_PASSWORD}"
    env:
      TZ: "${TIMEZONE}"
      MINIO_PROMETHEUS_AUTH_TYPE: "public"
      MINIO_UPDATE: "off"
      MINIO_PROMETHEUS_URL: http://kube-prometheus-stack-prometheus.monitoring:9090
      MINIO_PROMETHEUS_JOB_ID: minio
      MINIO_BROWSER_REDIRECT_URL: "https://minio.${SECRET_PUBLIC_DOMAIN}"
    mountPath: "/export"
    persistence:
      enabled: true
      existingClaim: minio-nfs
    service:
      type: LoadBalancer
      loadBalancerIP: "${METALLB_MINIO_ADDR}"
      externalTrafficPolicy: Local
      port: *port-api
    consoleService:
      type: LoadBalancer
      loadBalancerIP: "${METALLB_MINIO_ADDR}"
      externalTrafficPolicy: Local
      port: *port-console
    ingress:
      enabled: true
      ingressClassName: "traefik"
      annotations:
        cert-manager.io/cluster-issuer: "letsencrypt-production"
        hajimari.io/enable: "true"
        hajimari.io/icon: "bucket"
        hajimari.io/group: "storage"
        traefik.ingress.kubernetes.io/router.entrypoints: "websecure"
        traefik.ingress.kubernetes.io/router.middlewares: "networking-internal-only@kubernetescrd"
      hosts:
        - &host-api "s3.${SECRET_PUBLIC_DOMAIN}"
      tls:
        - hosts:
            - *host-api
          secretName: "minio-api-tls"
    consoleIngress:
      enabled: true
      ingressClassName: "traefik"
      annotations:
        cert-manager.io/cluster-issuer: "letsencrypt-production"
        hajimari.io/enable: "true"
        hajimari.io/icon: "bucket"
        hajimari.io/group: "storage"
        traefik.ingress.kubernetes.io/router.entrypoints: "websecure"
        traefik.ingress.kubernetes.io/router.middlewares: "networking-internal-only@kubernetescrd"
      hosts:
        - &host-console "minio.${SECRET_PUBLIC_DOMAIN}"
      tls:
        - hosts:
            - *host-console
          secretName: "minio-console-tls"
    podSecurityContext:
      runAsUser: 568
      runAsGroup: 568
      fsGroup: 568
      fsGroupChangePolicy: "OnRootMismatch"
      supplementalGroups:
        - 100
    podAnnotations:
      secret.reloader.stakater.com/reload: *app
    resources:
      requests:
        memory: 100Mi
        cpu: 100m
      limits:
        memory: 750Mi
    # buckets:
    #     # Name of the bucket
    #   - name: bucket1
    #     # Policy to be set on the
    #     # bucket [none|download|upload|public]
    #     policy: none
    #     # Purge if bucket exists already
    #     purge: false
    #     # set versioning for
    #     # bucket [true|false]
    #     versioning: false
    #     # set objectlocking for
    #     # bucket [true|false] NOTE: versioning is enabled by default if you use locking
    #     objectlocking: false
    #   - name: bucket2
    #     policy: none
    #     purge: false
    #     versioning: true
    #     # set objectlocking for
    #     # bucket [true|false] NOTE: versioning is enabled by default if you use locking
    #     objectlocking: false
