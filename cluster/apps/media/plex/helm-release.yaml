---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: &app plex
  namespace: media
spec:
  interval: 15m
  chart:
    spec:
      chart: app-template
      version: 0.2.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s-charts
        namespace: flux-system
  install:
    createNamespace: true
    remediation:
      retries: 5
  upgrade:
    remediation:
      retries: 5
  maxHistory: 3
  dependsOn:
    - name: traefik
      namespace: networking
    - name: longhorn
      namespace: longhorn-system
    - name: gpu-operator
      namespace: gpu-operator-system
  values:
    image:
      repository: ghcr.io/onedr0p/plex
      tag: 1.28.2.6151-914ddd2b3@sha256:0b1c10bda8403bb984eb8ae77ec19dd5abdaacc57e2ec42be4316f9dafec6977
    env:
      TZ: "${TIMEZONE}"
      ADVERTISE_IP: "https://{{ .Release.Name }}.${SECRET_PUBLIC_DOMAIN}:32400"
      PLEX_CLAIM: "${SECRET_PLEX_CLAIM}"
      ALLOWED_NETWORKS: "10.0.0.0/8,172.16.0.0/16,192.168.0.0/16"
      NVIDIA_VISIBLE_DEVICES: "all"
      NVIDIA_DRIVER_CAPABILITIES: "all"
    controller:
      type: deployment
      replicas: 1
    service:
      main:
        annotations:
          traefik.ingress.kubernetes.io/service.passhostheader: "true"
        type: LoadBalancer
        externalIPs: ["${METALLB_PLEX_ADDR}"]
        externalTrafficPolicy: Local
        ports:
          http:
            port: &port 32400
            protocol: HTTPS
    ingress:
      main:
        enabled: true
        ingressClassName: "traefik"
        annotations:
          cert-manager.io/cluster-issuer: "letsencrypt-production"
          traefik.ingress.kubernetes.io/router.entrypoints: "websecure"
          traefik.ingress.kubernetes.io/router.middlewares: "networking-cloudflare-only@kubernetescrd"
          external-dns/is-public: "true"
          external-dns.alpha.kubernetes.io/target: "ipv4.${SECRET_PUBLIC_DOMAIN}"
          hajimari.io/enable: "true"
          hajimari.io/icon: "plex"
          hajimari.io/group: "media"
        hosts:
          - host: &host "{{ .Release.Name }}.${SECRET_PUBLIC_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
        tls:
          - hosts:
              - *host
            secretName: plex-tls
    persistence:
      config:
        enabled: true
        existingClaim: plex-config-v1
      transcode:
        enabled: true
        type: emptyDir
        medium: Memory
        sizeLimit: 2Gi
        mountPath: /transcode
      media:
        enabled: true
        type: nfs
        server: "nas01.${SECRET_PRIVATE_DOMAIN}"
        path: "/volume2/Media"
        mountPath: /media
        readOnly: true
      pictures:
        enabled: true
        type: nfs
        server: "nas01.${SECRET_PRIVATE_DOMAIN}"
        path: "/volume2/Pictures"
        mountPath: /pictures
        readOnly: true
      videos:
        enabled: true
        type: nfs
        server: "nas01.${SECRET_PRIVATE_DOMAIN}"
        path: "/volume2/Videos"
        mountPath: /videos
        readOnly: true
    podSecurityContext:
      runAsUser: 568
      runAsGroup: 568
      fsGroup: 568
      fsGroupChangePolicy: "OnRootMismatch"
      # Hardware acceleration using an Intel iGPU w/ QuickSync
      # These IDs below should be matched to your `video` and `render` group on the host
      # To obtain those IDs run the following grep statement on the host:
      # $ cat /etc/group | grep "video\|render"
      # video:x:44:
      # render:x:109:
      supplementalGroups:
        - 44
        - 100
        - 109

    # affinity with GPU
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
            - matchExpressions:
                - key: nvidia.com/gpu.present
                  operator: In
                  values:
                    - "true"
    resources:
      requests:
        nvidia.com/gpu: 1
        cpu: 200m
        memory: 256Mi
      limits:
        nvidia.com/gpu: 1
        memory: 4096Mi
