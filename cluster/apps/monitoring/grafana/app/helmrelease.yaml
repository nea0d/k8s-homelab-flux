---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: grafana
  namespace: monitoring
spec:
  interval: 15m
  chart:
    spec:
      chart: grafana
      version: 6.51.1
      sourceRef:
        kind: HelmRepository
        name: grafana
        namespace: flux-system
      interval: 15m
  maxHistory: 3
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    replicas: 1
    deploymentStrategy:
      type: RollingUpdate
      rollingUpdate:
        maxUnavailable: 1
        maxSurge: 1
    rbac:
      pspEnabled: false
    env:
      GF_DATE_FORMATS_FULL_DATE: "DD MM YYYY hh:mm:ss a"
      DS_PROMETHEUS: Prometheus
      GF_PLUGINS_ALLOW_LOADING_UNSIGNED_PLUGINS: "natel-discrete-panel,pr0ps-trackmap-panel,panodata-map-panel,natel-plotly-panel"
      GF_ANALYTICS_CHECK_FOR_UPDATES: false
      GF_DATE_FORMATS_USE_BROWSER_LOCALE: true
      GF_EXPLORE_ENABLED: true
      GF_GRAFANA_NET_URL: https://grafana.net
      GF_LOG_FILTERS: rendering:debug
      GF_LOG_MODE: console
      GF_PANELS_DISABLE_SANITIZE_HTML: true
      GF_PATHS_DATA: /var/lib/grafana/data
      GF_PATHS_LOGS: /var/log/grafana
      GF_PATHS_PLUGINS: /var/lib/grafana/plugins
      GF_PATHS_PROVISIONING: /etc/grafana/provisioning
      GF_SECURITY_ALLOW_EMBEDDING: true
      GF_SECURITY_COOKIE_SAMESITE: grafana
      GF_SERVER_ROOT_URL: "https://grafana.${SECRET_PUBLIC_DOMAIN}"
    admin:
      existingSecret: grafana-admin-creds
    grafana.ini:
      # server:
      #   root_url: "https://grafana.${SECRET_PUBLIC_DOMAIN}"
      # paths:
      #   data: /var/lib/grafana/data
      #   logs: /var/log/grafana
      #   plugins: /var/lib/grafana/plugins
      #   provisioning: /etc/grafana/provisioning
      # security:
      #   allow_embedding: true
      #   cookie_secure: true
      # analytics:
      #   check_for_updates: false
      # log:
      #   mode: console
      # grafana_net:
      #   url: https://grafana.net
      # auth:
      #   signout_redirect_url: "https://id.${SECRET_PUBLIC_DOMAIN}/application/o/grafana/end-session/"
      #   oauth_auto_login: true
      auth.basic:
        # enabled: false
        disable_login_form: false
      # auth.generic_oauth:
      #   enabled: true
      #   name: 56k
      #   client_id: "${SECRET_GRAFANA_OAUTH_CLIENT_ID}"
      #   client_secret: "${SECRET_GRAFANA_OAUTH_CLIENT_SECRET}"
      #   scopes: "openid email profile"
      #   auth_url: https://id.${SECRET_PUBLIC_DOMAIN}/application/o/authorize/
      #   token_url: https://id.${SECRET_PUBLIC_DOMAIN}/application/o/token/
      #   api_url: https://id.${SECRET_PUBLIC_DOMAIN}/application/o/userinfo/
      #   role_attribute_path: "contains(groups[*], 'Grafana Admins') && 'Admin' || contains(groups[*], 'Grafana Editors') && 'Editor' || 'Viewer'"
      # auth.anonymous:
      #   enabled: true
      #   org_name: Oxygn
      #   org_id: 1
      #   org_role: Viewer
    ingress:
      enabled: true
      ingressClassName: "nginx"
      annotations:
        cert-manager.io/cluster-issuer: "letsencrypt-production"
        hajimari.io/enable: "true"
        hajimari.io/icon: "chart-line"
        hajimari.io/appName: "grafana"
        hajimari.io/group: "monitoring"
      hosts:
        - &host "grafana.${SECRET_PUBLIC_DOMAIN}"
      tls:
        - hosts:
            - *host
          secretName: "grafana-tls"
    plugins:
      - natel-discrete-panel
      - pr0ps-trackmap-panel
      - grafana-piechart-panel
      - vonage-status-panel
      - grafana-worldmap-panel
      - grafana-clock-panel
      - natel-plotly-panel
      - https://github.com/panodata/panodata-map-panel/releases/download/0.16.0/panodata-map-panel-0.16.0.zip;grafana-worldmap-panel-ng
    serviceMonitor:
      enabled: true
    serviceAccount:
      create: true
      autoMount: true
    sidecar:
      # skipTlsVerify: true
      dashboards:
        enabled: true
        label: grafana_dashboard
        searchNamespace: ALL
        folder: /var/lib/grafana/dashboards/default
        folderAnnotation: grafana_folder
        provider:
          allowUiUpdates: true
          foldersFromFilesStructure: true
      datasources:
        enabled: true
        label: grafana_datasource
        searchNamespace: ALL
        reloadURL: "http://localhost:3000/api/admin/provisioning/datasources/reload"
      plugins:
        enabled: true
        label: grafana_plugin
        searchNamespace: ALL
        reloadURL: "http://localhost:3000/api/admin/provisioning/plugins/reload"
    dashboardProviders:
      dashboardproviders.yaml:
        apiVersion: 1
        providers:
          - name: "default"
            orgId: 1
            folder: ""
            type: file
            disableDeletion: false
            editable: true
            options:
              path: /var/lib/grafana/dashboards/default
    datasources:
      datasources.yaml:
        apiVersion: 1
        # list of datasources that should be deleted from the database
        deleteDatasources:
          - name: Loki
            orgId: 1
          - name: Alertmanager
            orgId: 1
        datasources:
          - name: Prometheus
            type: prometheus
            #url: "http://kube-prometheus-stack-prometheus:9090"
            url: http://thanos-query.monitoring.svc.cluster.local.:9090/
            uid: "PBFA97CFB590B2093"
            access: proxy
            isDefault: true
            editable: true
            jsonData:
              alertmanagerUid: "P7648CD38D5F55DE2"
              manageAlerts: true
              httpMethod": "POST"
          - name: Loki
            type: loki
            access: proxy
            url: http://loki-gateway.monitoring.svc.cluster.local.:80
            uid: "P8E80F9AEF21F6940"
            editable: true
            jsonData:
              alertmanagerUid: "P7648CD38D5F55DE2"
              manageAlerts: true
          - name: Alertmanager
            type: alertmanager
            access: proxy
            uid: "P7648CD38D5F55DE2"
            url: http://kube-prometheus-stack-alertmanager.monitoring.svc.cluster.local.:9093
            editable: true
            jsonData:
              implementation: prometheus
    # dashboards:
    #   default:
    #     # Ref: https://grafana.com/grafana/dashboards/13502
    #     minio:
    #       gnetId: 13502
    #       revision: 10
    #       datasource: Prometheus
    imageRenderer:
      enabled: true
      replicas: 1
    persistence:
      enabled: true
      size: 10Gi
      storageClass: ceph-block
    affinity:
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                  - key: app.kubernetes.io/name
                    operator: In
                    values: ["grafana"]
              topologyKey: kubernetes.io/hostname
