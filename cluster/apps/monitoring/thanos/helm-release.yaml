---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: &app thanos
  namespace: monitoring
spec:
  interval: 15m
  chart:
    spec:
      chart: thanos
      version: 11.5.3
      sourceRef:
        kind: HelmRepository
        name: bitnami-charts
        namespace: flux-system
      interval: 15m
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    remediation:
      retries: 3
  dependsOn:
    - name: traefik
      namespace: networking
    - name: longhorn
      namespace: longhorn-system
    - name: kube-prometheus-stack
      namespace: monitoring
  values:
    existingObjstoreSecret: &secret thanos-objstore-secret
    query:
      enabled: true
      replicaCount: 1
      podAntiAffinityPreset: hard
      replicaLabel:
        - __replica__
      dnsDiscovery:
        sidecarsService: kube-prometheus-stack-thanos-discovery
        sidecarsNamespace: monitoring
      ingress:
        enabled: true
        hostname: &host "thanos-query.${SECRET_PUBLIC_DOMAIN}"
        ingressClassName: "traefik"
        annotations:
          cert-manager.io/cluster-issuer: "letsencrypt-production"
          traefik.ingress.kubernetes.io/router.entrypoints: "websecure"
          traefik.ingress.kubernetes.io/router.middlewares: "networking-internal-only@kubernetescrd"
        tls: true
        extraTls:
          - hosts:
              - *host
            secretName: thanos-query-tls
    queryFrontend:
      enabled: false
    bucketweb:
      enabled: false
      # replicaCount: 1
      # podAntiAffinityPreset: hard
      # ingress:
      #   enabled: true
      #   hostname: &host "thanos-bucketweb.${SECRET_PUBLIC_DOMAIN}"
      #   ingressClassName: "traefik"
      #   annotations:
      #     cert-manager.io/cluster-issuer: "letsencrypt-production"
      #     traefik.ingress.kubernetes.io/router.entrypoints: "websecure"
      #     traefik.ingress.kubernetes.io/router.middlewares: "networking-internal-only@kubernetescrd"
      #   tls: true
      #   extraTls:
      #     - hosts:
      #         - *host
      #       secretName: thanos-bucketweb-tls
    compactor:
      enabled: false
      # extraFlags:
      #   - "--compact.concurrency"
      #   - "1"
      # retentionResolutionRaw: 14d
      # retentionResolution5m: 14d
      # retentionResolution1h: 14d
      # ingress:
      #   enabled: true
      #   hostname: &host "thanos-compactor.${SECRET_PUBLIC_DOMAIN}"
      #   ingressClassName: "traefik"
      #   annotations:
      #     cert-manager.io/cluster-issuer: "letsencrypt-production"
      #     traefik.ingress.kubernetes.io/router.entrypoints: "websecure"
      #     traefik.ingress.kubernetes.io/router.middlewares: "networking-internal-only@kubernetescrd"
      #   tls: true
      #   extraTls:
      #     - hosts:
      #         - *host
      #       secretName: thanos-compactor-tls
      # persistence:
      #   enabled: true
      #   storageClass: "longhorn-ssd"
      #   size: 10Gi
    storegateway:
      enabled: false
      # replicaCount: 1
      # podAntiAffinityPreset: hard
      # ingress:
      #   enabled: true
      #   hostname: &host "thanos-storegateway.${SECRET_PUBLIC_DOMAIN}"
      #   ingressClassName: "traefik"
      #   annotations:
      #     cert-manager.io/cluster-issuer: "letsencrypt-production"
      #     traefik.ingress.kubernetes.io/router.entrypoints: "websecure"
      #     traefik.ingress.kubernetes.io/router.middlewares: "networking-internal-only@kubernetescrd"
      #   tls: true
      #   extraTls:
      #     - hosts:
      #         - *host
      #       secretName: thanos-storegateway-tls
      # persistence:
      #   enabled: true
      #   storageClass: "longhorn-ssd"
      #   size: 5Gi
    ruler:
      enabled: false
      # replicaCount: 1
      # podAntiAffinityPreset: hard
      # dnsDiscovery:
      #   enabled: true
      # alertmanagers:
      #   - http://kube-prometheus-stack-alertmanager.monitoring:9093
      # clusterName: "${CLUSTER_NAME}"
      # extraFlags:
      #   - "--web.prefix-header=X-Forwarded-Prefix"
      # config: |-
      #   groups:
      #     - name: "PrometheusWatcher"
      #       rules:
      #         - alert: "PrometheusDown"
      #           expr: absent(up{job="kube-prometheus-stack-prometheus"})
      # ingress:
      #   enabled: true
      #   hostname: &host "thanos-ruler.${SECRET_PUBLIC_DOMAIN}"
      #   ingressClassName: "traefik"
      #   annotations:
      #     cert-manager.io/cluster-issuer: "letsencrypt-production"
      #     traefik.ingress.kubernetes.io/router.entrypoints: "websecure"
      #     traefik.ingress.kubernetes.io/router.middlewares: "networking-internal-only@kubernetescrd"
      #   tls: true
      #   extraTls:
      #     - hosts:
      #         - *host
      #       secretName: thanos-ruler-tls
      # persistence:
      #   enabled: true
      #   storageClass: "longhorn-ssd"
      #   size: 5Gi
    metrics:
      enabled: true
      serviceMonitor:
        enabled: true
