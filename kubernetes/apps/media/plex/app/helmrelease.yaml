---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: &app plex
  namespace: media
spec:
  interval: 30m
  timeout: 15m
  chart:
    spec:
      chart: app-template
      version: 2.2.0
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  maxHistory: 2
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  dependsOn:
    - name: gpu-operator
      namespace: gpu-operator
    - name: rook-ceph-cluster
      namespace: rook-ceph
    - name: volsync
      namespace: volsync
  values:
    controllers:
      main:
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          main:
            image:
              repository: ghcr.io/onedr0p/plex
              tag: 1.32.7.7621-871adbd44@sha256:f9f77dc5e17cab9fae5ece663a64d026e3c75142b3b60bb4a52bf061957412be
            env:
              TZ: "${TIMEZONE}"
              ADVERTISE_IP: "http://${LB_PLEX_IP}:32400,https://{{ .Release.Name }}.${SECRET_PUBLIC_DOMAIN}:443"
              PLEX_CLAIM: "${SECRET_PLEX_CLAIM}"
              ALLOWED_NETWORKS: "10.0.0.0/8,172.16.0.0/16,192.168.0.0/16,127.0.0.0/8"
              SECURE_CONNECTIONS: "1" #1: Preferred, 0: Required
              # required for HW acceleration
              NVIDIA_VISIBLE_DEVICES: "all"
              NVIDIA_DRIVER_CAPABILITIES: "all"
              HARDWARE_DEVICE_PATH: "/dev/nvidia0"
              TRANSCODER_TEMP_DIRECTORY: "/tmp" # /transocde
            runtimeClassName: nvidia
            resources:
              requests:
                nvidia.com/gpu: 1
                cpu: 15m
                memory: 380M
              limits:
                nvidia.com/gpu: 1
                memory: 2G
        pod:
          affinity:
            nodeAffinity:
              requiredDuringSchedulingIgnoredDuringExecution:
                nodeSelectorTerms:
                  - matchExpressions:
                      - key: nvidia.com/gpu.present
                        operator: In
                        values:
                          - "true"
          nodeSelector:
            nvidia.com/gpu.present: "true"
          securityContext:
            runAsUser: 568
            runAsGroup: 568
            fsGroup: 568
            fsGroupChangePolicy: OnRootMismatch
            supplementalGroups: [44, 105, 10000]
    service:
      main:
        type: LoadBalancer
        annotations:
          io.cilium/lb-ipam-ips: "${LB_PLEX_IP}"
        ports:
          http:
            port: &port 32400
    ingress:
      main:
        enabled: true
        className: external
        annotations:
          external-dns.alpha.kubernetes.io/target: "external.${SECRET_PUBLIC_DOMAIN}"
          nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
          hajimari.io/enable: "true"
          hajimari.io/icon: "plex"
          hajimari.io/group: "media"
        hosts:
          - host: &host "{{ .Release.Name }}.${SECRET_PUBLIC_DOMAIN}"
            paths:
              - path: /
                service:
                  name: main
                  port: http
        tls:
          - hosts:
              - *host
    persistence:
      config:
        enabled: true
        existingClaim: pvc-plex-config-v1
      transcode:
        enabled: true
        type: nfs
        server: "nas01.${SECRET_PRIVATE_DOMAIN}"
        path: "/volume2/Media/Transcode"
        mountPath: /transcode
      # transcode:
      #   enabled: true
      #   type: emptyDir
      #   medium: Memory
      #   sizeLimit: 1Gi
      #   mountPath: /transcode
      media:
        enabled: true
        type: nfs
        server: "nas01.${SECRET_PRIVATE_DOMAIN}"
        path: "/volume2/Media"
        mountPath: /media
        readOnly: true
      pictures:
        enabled: true
        type: nfs
        server: "nas01.${SECRET_PRIVATE_DOMAIN}"
        path: "/volume2/Pictures"
        mountPath: /pictures
        readOnly: true
      videos:
        enabled: true
        type: nfs
        server: "nas01.${SECRET_PRIVATE_DOMAIN}"
        path: "/volume2/Videos"
        mountPath: /videos
        readOnly: true
