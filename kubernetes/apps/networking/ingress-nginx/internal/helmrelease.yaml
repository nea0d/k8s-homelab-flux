---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: ingress-nginx-internal
  namespace: networking
spec:
  interval: 15m
  chart:
    spec:
      chart: ingress-nginx
      version: 4.8.3
      sourceRef:
        kind: HelmRepository
        name: ingress-nginx
        namespace: flux-system
  maxHistory: 2
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    fullnameOverride: ingress-nginx-internal
    controller:
      replicaCount: 2
      deploymentStrategy:
        type: RollingUpdate
        rollingUpdate:
          maxUnavailable: 1
          maxSurge: 1
      extraEnvs:
        - name: TZ
          value: "${TIMEZONE}"
      service:
        annotations:
          external-dns.alpha.kubernetes.io/hostname: "internal.${SECRET_PUBLIC_DOMAIN}"
        type: LoadBalancer
        loadBalancerIP: ${METALLB_NGINX_INTERNAL_ADDR}
        externalTrafficPolicy: Local
      publishService:
        enabled: true
      ingressClassResource:
        name: internal
        default: true
        controllerValue: k8s.io/internal
      admissionWebhooks:
        objectSelector:
          matchExpressions:
            - key: ingress-class
              operator: In
              values: ["internal"]
      allowSnippetAnnotations: true
      config:
        client-body-buffer-size: "100M"
        client-body-timeout: 120
        client-header-timeout: 120
        enable-brotli: "true"
        enable-real-ip: "true"
        forwarded-for-header: "CF-Connecting-IP"
        hsts-max-age: 31449600
        keep-alive-requests: 10000
        keep-alive: 120
        log-format-escape-json: "true"
        log-format-upstream: >
          {"time": "$time_iso8601", "remote_addr": "$proxy_protocol_addr", "x_forwarded_for": "$proxy_add_x_forwarded_for",
          "request_id": "$req_id", "remote_user": "$remote_user", "bytes_sent": $bytes_sent, "request_time": $request_time,
          "status": $status, "vhost": "$host", "request_proto": "$server_protocol", "path": "$uri", "request_query": "$args",
          "request_length": $request_length, "duration": $request_time, "method": "$request_method", "http_referrer": "$http_referer",
          "http_user_agent": "$http_user_agent"}
        proxy-body-size: 0
        proxy-buffer-size: 16k
        ssl-protocols: TLSv1.3 TLSv1.2
        use-forwarded-headers: "true"
      metrics:
        enabled: true
        serviceMonitor:
          enabled: true
          namespace: networking
          namespaceSelector:
            any: true
      extraArgs:
        default-ssl-certificate: |-
          networking/${SECRET_PUBLIC_DOMAIN/./-}-tls
      topologySpreadConstraints:
        - maxSkew: 1
          topologyKey: kubernetes.io/hostname
          whenUnsatisfiable: DoNotSchedule
          labelSelector:
            matchLabels:
              app.kubernetes.io/name: ingress-nginx-internal
              app.kubernetes.io/component: controller
      resources:
        requests:
          cpu: 10m
          memory: 250Mi
        limits:
          memory: 500Mi
    defaultBackend:
      enabled: false
  # postRenderers:
  #   - kustomize:
  #       patchesJson6902:
  #         - target:
  #             kind: Deployment
  #             name: ingress-nginx-controller
  #           patch:
  #             - op: replace
  #               path: /spec/strategy
  #               value:
  #                 type: RollingUpdate
  #                 rollingUpdate:
  #                   maxSurge: 1
  #                   maxUnavailable: 1