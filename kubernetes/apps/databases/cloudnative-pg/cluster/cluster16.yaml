---
# yaml-language-server: $schema=https://kubernetes-schemas.devbu.io/postgresql.cnpg.io/cluster_v1.json
apiVersion: postgresql.cnpg.io/v1
kind: Cluster
metadata:
  name: postgres16
spec:
  instances: 3
  imageName: ghcr.io/cloudnative-pg/postgresql:16.0-10
  primaryUpdateStrategy: unsupervised
  storage:
    size: 10Gi
    storageClass: local-path
  superuserSecret:
    name: postgres-superuser
  enableSuperuserAccess: true
  postgresql:
    parameters:
      max_connections: "600"
      shared_buffers: 512MB
  resources:
    requests:
      memory: 1Gi
      cpu: 250m
    limits:
      memory: 2Gi
  monitoring:
    enablePodMonitor: true
  backup:
    retentionPolicy: 30d
    barmanObjectStore:
      wal:
        compression: bzip2
        maxParallel: 8
      serverName: &currentCluster postgres16-v1
      destinationPath: s3://postgres-backup-v2/
      endpointURL: https://${SECRET_CLOUDFLARE_ACCOUNT_ID}.eu.r2.cloudflarestorage.com
      s3Credentials:
        accessKeyId:
          name: postgres-r2
          key: R2_ACCESS_KEY_ID
        secretAccessKey:
          name: postgres-r2
          key: R2_SECRET_ACCESS_KEY
  # Note: Bootstrap is needed when recovering from an existing cnpg cluster
  # bootstrap:
  #   recovery:
  #     source: &previousCluster postgres16-v1
  # Note: externalClusters is needed when recovering from an existing cnpg cluster
  # externalClusters:
  #   - name: *previousCluster
  #     barmanObjectStore:
  #       wal:
  #         compression: bzip2
  #         maxParallel: 8
  #       destinationPath: s3://postgres-backup-v2/
  #       endpointURL: https://${SECRET_CLOUDFLARE_ACCOUNT_ID}.eu.r2.cloudflarestorage.com
  #       s3Credentials:
  #         accessKeyId:
  #           name: postgres-r2
  #           key: R2_ACCESS_KEY_ID
  #         secretAccessKey:
  #           name: postgres-r2
  #           key: R2_SECRET_ACCESS_KEY