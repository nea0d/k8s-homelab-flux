---
# yaml-language-server: $schema=https://kubernetes-schemas.oxygn.dev/postgresql.cnpg.io/cluster_v1.json
apiVersion: postgresql.cnpg.io/v1
kind: Cluster
metadata:
  name: postgres
spec:
  instances: 3
  imageName: ghcr.io/cloudnative-pg/postgresql:16.1-17
  primaryUpdateStrategy: unsupervised
  storage:
    size: 15Gi
    storageClass: local-path
  superuserSecret:
    name: postgres-superuser
  enableSuperuserAccess: true
  postgresql:
    parameters:
      max_connections: "600"
      max_slot_wal_keep_size: 10GB
      shared_buffers: 512MB
  resources:
    requests:
      memory: 2Gi
      cpu: 250m
    limits:
      memory: 4Gi
  monitoring:
    enablePodMonitor: true
  backup:
    retentionPolicy: 30d
    barmanObjectStore:
      wal:
        compression: bzip2
        maxParallel: 4
      serverName: &currentCluster postgres-v3
      destinationPath: s3://postgres-backup-v1/
      endpointURL: https://${SECRET_CLOUDFLARE_ACCOUNT_ID}.eu.r2.cloudflarestorage.com
      s3Credentials:
        accessKeyId:
          name: postgres-r2
          key: R2_ACCESS_KEY_ID
        secretAccessKey:
          name: postgres-r2
          key: R2_SECRET_ACCESS_KEY
  # Note: Bootstrap is needed when recovering from an existing cnpg cluster
  bootstrap:
    recovery:
      source: &previousCluster postgres-v2
  # Note: externalClusters is needed when recovering from an existing cnpg cluster
  externalClusters:
    - name: *previousCluster
      barmanObjectStore:
        wal:
          compression: bzip2
          maxParallel: 4
        destinationPath: s3://postgres-backup-v2/
        endpointURL: https://${SECRET_CLOUDFLARE_ACCOUNT_ID}.eu.r2.cloudflarestorage.com
        s3Credentials:
          accessKeyId:
            name: postgres-r2
            key: R2_ACCESS_KEY_ID
          secretAccessKey:
            name: postgres-r2
            key: R2_SECRET_ACCESS_KEY