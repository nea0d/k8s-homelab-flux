{
  "enabled": true,
  "extends": [
    "config:base",
    "docker:enableMajor",
    ":disableRateLimiting",
    ":dependencyDashboard",
    ":semanticCommits",
    ":enablePreCommit",
    ":automergeDigest",
    ":automergeBranchPush",
    "github>nea0d/k8s-homelab-flux//.github/renovate/allowedVersions.json5",
    "github>nea0d/k8s-homelab-flux//.github/renovate/autoMerge.json5",
    "github>nea0d/k8s-homelab-flux//.github/renovate/commitMessage.json5",
    "github>nea0d/k8s-homelab-flux//.github/renovate/disabledDatasources.json5",
    "github>nea0d/k8s-homelab-flux//.github/renovate/groups.json5",
    "github>nea0d/k8s-homelab-flux//.github/renovate/labels.json5",
    "github>nea0d/k8s-homelab-flux//.github/renovate/manualMergeRequired.json5",
    "github>nea0d/k8s-homelab-flux//.github/renovate/semanticCommits.json5"
  ],
  "platform": "github",
  "repositories": ["nea0d/k8s-homelab-flux"],
  "timezone": "Europe/Paris",
  "schedule": ["after 10pm every weekday", "before 5am every weekday", "every weekend"],
  "onboarding": false,
  "requireConfig": false,
  "dependencyDashboardTitle": "Renovate Dashboard",
  "suppressNotifications": ["prIgnoreNotification"],
  "rebaseWhen": "conflicted",
  "rollbackPrs": true,
  "commitBodyTable": true,
  "ignorePaths": ["archive/**"],
  "pre-commit": {
    "enabled": true
  },
  "flux": {
    "fileMatch": ["cluster/.+\\.ya?ml$"]
  },
  "helm-values": {
    "fileMatch": ["cluster/.+\\.ya?ml$"]
  },
  "kubernetes": {
    "fileMatch": [
      "cluster/.+\\.ya?ml$",
      "provision/ansible/.+\\.ya?ml.j2$"
    ]
  },
  "regexManagers": [
    {
      "description": "Process CRD dependencies",
      "fileMatch": ["cluster/.+\\.ya?ml$"],
      "matchStrings": [
        // GitRepository where 'Git release/tag' matches 'Helm' version
        "registryUrl=(?<registryUrl>\\S+) chart=(?<depName>\\S+)\n.*?(?<currentValue>[^-\\s]*)\n",
        // Kustomization where 'GitHub release artifact URL' matches 'Docker image' version
        "datasource=(?<datasource>\\S+) image=(?<depName>\\S+)\n.*?-\\s(.*?)\/(?<currentValue>[^/]+)\/[^/]+\n"
      ],
      "datasourceTemplate": "{{#if datasource}}{{{datasource}}}{{else}}helm{{/if}}"
    },
    {
      "description": "Process various dependencies",
      "fileMatch": [
        "ansible/.+\\.ya?ml$",
        "cluster/.+\\.ya?ml$"
      ],
      "matchStrings": [
        "datasource=(?<datasource>\\S+) depName=(?<depName>\\S+)( versioning=(?<versioning>\\S+))?\n.*?\"(?<currentValue>.*)\"\n"
      ],
      "datasourceTemplate": "{{#if datasource}}{{{datasource}}}{{else}}github-releases{{/if}}",
      "versioningTemplate": "{{#if versioning}}{{{versioning}}}{{else}}semver{{/if}}"
    },
    {
      "description": "Process raw GitHub URLs",
      "fileMatch": ["cluster/.+\\.ya?ml$"],
      "matchStrings": [
        "https:\\/\\/raw.githubusercontent.com\\/(?<depName>[\\w\\d\\-_]+\\/[\\w\\d\\-_]+)\\/(?<currentValue>[\\w\\d\\.\\-_]+)\\/.*"
      ],
      "datasourceTemplate": "github-releases",
      "versioningTemplate": "semver"
    }
  ],
  "packageRules": [
    {
      "description": "Use loose versioning for certain dependencies",
      "matchDatasources": ["docker", "github-releases"],
      "versioning": "loose",
      "matchPackageNames": [
        "ghcr.io/onedr0p/plex",
        "ghcr.io/onedr0p/qbittorrent"
      ]
    },
    {
      "description": "Use custom versioning for Minio",
      "matchDatasources": ["docker"],
      "versioning": "regex:^RELEASE\\.(?<major>\\d+)-(?<minor>\\d+)-(?<patch>\\d+)T.*Z(-(?<compatibility>.*))?$",
      "matchPackageNames": ["quay.io/minio/minio"]
    }
  ]
}
